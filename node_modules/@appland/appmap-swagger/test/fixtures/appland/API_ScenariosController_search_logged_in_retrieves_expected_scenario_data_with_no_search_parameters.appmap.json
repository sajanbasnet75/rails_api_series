{
  "version": "1.4",
  "metadata": {
    "app": "nytem-2021/appland",
    "language": {
      "name": "ruby",
      "engine": "ruby",
      "version": "2.6.6"
    },
    "client": {
      "name": "appmap",
      "url": "https://github.com/applandinc/appmap-ruby",
      "version": "0.42.0"
    },
    "frameworks": [
      {
        "name": "rails",
        "version": "5.2.4.2"
      },
      {
        "name": "rspec",
        "version": "3.9.1"
      }
    ],
    "git": {
      "repository": "git@github.com:applandinc/appland.git",
      "branch": "swagger",
      "commit": "d82ba25ed71e5086c39becb3a3ae2cfc2a3571b6",
      "status": [
        "M Gemfile.lock",
        "?? 20210310072459.appmap.json"
      ],
      "git_last_annotated_tag": null,
      "git_last_tag": "v0.22.0",
      "git_commits_since_last_annotated_tag": null,
      "git_commits_since_last_tag": 0
    },
    "name": "API::ScenariosController .search logged in retrieves expected scenario data with no search parameters",
    "source_location": "spec/requests/api_scenarios_search_spec.rb",
    "recorder": {
      "name": "rspec"
    },
    "fingerprints": [
      {
        "appmap_digest": "3770ce5c014be679ade158f2ec9e9d1a5b3b024e3e28f62fd2dfcf1227f2394d",
        "canonicalization_algorithm": "update_v1",
        "digest": "17c26986bdd45b265d5a4715a0d7404ca5fa8d523d05f67a4addacc44392e796",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "3770ce5c014be679ade158f2ec9e9d1a5b3b024e3e28f62fd2dfcf1227f2394d",
        "canonicalization_algorithm": "info_v1",
        "digest": "b6b698bed96325d9bf79059b8fba88b9c955e5559e6f07f23aafc50e5ae60225",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "3770ce5c014be679ade158f2ec9e9d1a5b3b024e3e28f62fd2dfcf1227f2394d",
        "canonicalization_algorithm": "trace_v1",
        "digest": "ed0af1e20aa7ad8e17d93d7c6ab654a2593804de68c7cdd6acf1eaa00514f413",
        "fingerprint_algorithm": "sha256"
      }
    ]
  },
  "classMap": [
    {
      "name": "app/models",
      "type": "package",
      "children": [
        {
          "name": "ApiKey",
          "type": "class",
          "children": [
            {
              "name": "issue",
              "type": "function",
              "location": "app/models/api_key.rb:28",
              "static": true,
              "source": "    def issue(login, description: nil, encode: true)\n      api_key = DAO::ApiKey.new.tap do |api_key|\n        api_key.login = login\n        api_key.description = description if description.present?\n        api_key.save\n      end\n\n      return encode(api_key) if encode\n\n      api_key\n    end\n"
            },
            {
              "name": "encode",
              "type": "function",
              "location": "app/models/api_key.rb:20",
              "static": true,
              "source": "    def encode(api_key)\n      Base64.urlsafe_encode64([api_key.login, api_key.key].join(SEPARATOR), padding: false)\n    end\n"
            },
            {
              "name": "authenticate",
              "type": "function",
              "location": "app/models/api_key.rb:52",
              "static": true,
              "labels": [
                "provider.authentication"
              ],
              "comment": "# @labels provider.authentication\n",
              "source": "    def authenticate(api_key)\n      login, key = decode(api_key)\n      result = DAO::ApiKey.where(login: login).match(key)\n\n      if result.present?\n        touch(result)\n        User::Show.new(result.user)\n      else\n        nil\n      end\n    end\n"
            },
            {
              "name": "decode",
              "type": "function",
              "location": "app/models/api_key.rb:24",
              "static": true,
              "source": "    def decode(api_key)\n      Base64.urlsafe_decode64(api_key).split(SEPARATOR)\n    end\n"
            },
            {
              "name": "touch",
              "type": "function",
              "location": "app/models/api_key.rb:11",
              "static": true,
              "source": "    def touch(api_key)\n      if api_key.last_used.nil? || api_key.last_used > 15.minutes.ago\n        api_key.last_used = Time.now\n        api_key.save_changes\n      end\n\n      api_key\n    end\n"
            }
          ]
        },
        {
          "name": "Scenario",
          "type": "class",
          "children": [
            {
              "name": "SearchActions",
              "type": "class",
              "children": [
                {
                  "name": "search_api",
                  "type": "function",
                  "location": "app/models/scenario.rb:66",
                  "static": false,
                  "source": "    def search_api(params)\n      matching_scenarios = base_dataset_filter.select(Sequel.as(:id, :scenario_id))\n      search_params = %w[mapsets code_objects labels not_labels not_code_objects]\n      params.each do |key, value|\n        if search_params.include?(key) && value.present?\n          matching_scenarios = matching_scenarios.public_send(\"filter_by_#{key}\", value)\n        end\n      end\n\n      query = Sequel::Model.db[:matching_scenarios]\n        .with(:matching_scenarios, matching_scenarios)\n        .join(:scenarios, [[Sequel[:scenarios][:id], Sequel[:matching_scenarios][:scenario_id]]])\n        .select(:mapset_id, :uuid)\n        .group_by(:mapset_id, :uuid, :labels)\n\n      # If labels were requested, calculate the intersection between labels requested and\n      # labels present on the scenario. Otherwise, null.\n      if params[:labels].present?\n        query = query.select_append(\n          Sequel.as(\n            Sequel.lit('ARRAY(SELECT UNNEST(labels) INTERSECT SELECT UNNEST(?))', Sequel.pg_array(params[:labels])),\n            :labels\n          )\n        )\n      else\n        query = query.select_append(Sequel.as(nil, :labels))\n      end\n\n      # Don't bother joining objects that aren't in the requested code_objects. Otherwise,\n      # we won't return the intersection between the code objects requested and the code\n      # objects in the scenario.\n      if params[:code_objects].present?\n        code_object_join_conditions = [\n          Sequel.lit('scenario_code_objects.scenario_id = matching_scenarios.scenario_id'),\n          Sequel.expr { { object_name: params[:code_objects] } }\n        ]\n\n        query = query.select_append(\n          Sequel.as(\n            Sequel.lit('array_agg(object_name)'),\n            :object_names\n          )\n        ).inner_join(:scenario_code_objects, code_object_join_conditions.reduce(&:&))\n      end\n\n      query = Sequel::Model.db[:scenarios]\n                .join(query.as(:subquery), [[Sequel[:scenarios][:uuid], Sequel[:subquery][:uuid]]])\n                .select(Sequel.lit('subquery.*'), :metadata)\n      query.map do |row|\n        ApiItem.new(row[:mapset_id], row[:uuid], row[:object_names] || [], row[:metadata], row[:labels] || [])\n      end\n    end\n"
                }
              ]
            }
          ]
        },
        {
          "name": "Search",
          "type": "class",
          "children": [
            {
              "name": "filter",
              "type": "function",
              "location": "app/models/search.rb:33",
              "static": false,
              "source": "  def filter(dataset, table_name: nil)\n    # Don't hide anything from an admin\n    # This should be replaced at some point with a proper impersonation system\n    return dataset if user&.admin?\n\n    DAO::PublicResource.coerce(dataset)\n                       .scope(user, scope: scope)\n  end\n"
            }
          ]
        },
        {
          "name": "User",
          "type": "class",
          "children": [
            {
              "name": "Show",
              "type": "class",
              "children": [
                {
                  "name": "admin?",
                  "type": "function",
                  "location": "app/models/user.rb:106",
                  "static": false,
                  "source": "    def admin?\n      @user.admin\n    end\n"
                }
              ]
            }
          ]
        },
        {
          "name": "DAO",
          "type": "class",
          "children": [
            {
              "name": "PublicResource",
              "type": "class",
              "children": [
                {
                  "name": "coerce",
                  "type": "function",
                  "location": "app/models/dao/public_resource.rb:18",
                  "static": true,
                  "comment": "# Coerce a dataset to a type that is safe to invoke scope.\n",
                  "source": "    def self.coerce(dataset)\n      if dataset.is_a?(PublicResource)\n        dataset\n      else\n        UnscopableResource.new(dataset)\n      end\n    end\n"
                },
                {
                  "name": "scope",
                  "type": "function",
                  "location": "app/models/dao/public_resource.rb:26",
                  "static": true,
                  "source": "    def scope(user, scope: Search::SCOPE_MEMBERSHIP)\n      if user\n        user = DAO::User[user.id]\n      else\n        raise Exceptions::Forbidden if scope == Search::SCOPE_MEMBERSHIP\n      end\n\n      case scope\n      when Search::SCOPE_MEMBERSHIP\n        dataset.scope_membership(user)\n      when Search::SCOPE_PUBLIC\n        dataset.scope_public\n      when Search::SCOPE_LISTABLE\n        dataset.scope_listable(user)\n      when Search::SCOPE_FINDABLE\n        dataset.scope_findable(user)\n      end\n    end\n"
                }
              ]
            },
            {
              "name": "SequelUtil",
              "type": "class",
              "children": [
                {
                  "name": "build_where_clause",
                  "type": "function",
                  "location": "app/models/dao/sequel_util.rb:6",
                  "static": true,
                  "source": "      def build_where_clause(dataset, clauses)\n        dataset = dataset.where(clauses.shift)\n        clauses.each do |clause|\n          dataset = dataset.or(clause)\n        end\n        dataset\n      end\n"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "action_pack",
      "type": "package",
      "children": [
        {
          "name": "ActionDispatch",
          "type": "class",
          "children": [
            {
              "name": "Cookies",
              "type": "class",
              "children": [
                {
                  "name": "CookieJar",
                  "type": "class",
                  "children": [
                    {
                      "name": "update",
                      "type": "function",
                      "location": "/Users/kgilpin/tmp/appland/vendor/bundle/ruby/2.6.0/gems/actionpack-5.2.4.2/lib/action_dispatch/middleware/cookies.rb:344",
                      "static": false,
                      "labels": [
                        "provider.http.cookie"
                      ],
                      "source": "      def update(other_hash)\n        @cookies.update other_hash.stringify_keys\n        self\n      end\n"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "app/controllers",
      "type": "package",
      "children": [
        {
          "name": "AnonymousAccess",
          "type": "class",
          "children": [
            {
              "name": "anonymous_access?",
              "type": "function",
              "location": "app/controllers/concerns/anonymous_access.rb:9",
              "static": false,
              "source": "  def anonymous_access?\n    @anonymous_access\n  end\n"
            }
          ]
        },
        {
          "name": "API",
          "type": "class",
          "children": [
            {
              "name": "ScenariosController",
              "type": "class",
              "children": [
                {
                  "name": "index",
                  "type": "function",
                  "location": "app/controllers/api/scenarios_controller.rb:17",
                  "static": false,
                  "source": "    def index\n      raise Exceptions::InvalidArguments.new('search', 'mapsets are required') unless params[:mapsets].present?\n\n      validate_params_intersection('labels', 'not_labels')\n      validate_params_intersection('code_objects', 'not_code_objects')\n\n      scenarios = search_scope(Scenario, scope: Search::SCOPE_MEMBERSHIP).search_api(params)\n      render json: scenarios, status: :ok\n    end\n"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "json",
      "type": "package",
      "children": [
        {
          "name": "JSON",
          "type": "class",
          "children": [
            {
              "name": "Ext",
              "type": "class",
              "children": [
                {
                  "name": "Parser",
                  "type": "class",
                  "children": [
                    {
                      "name": "parse",
                      "type": "function",
                      "location": "JSON::Ext::Parser#parse",
                      "static": false,
                      "labels": [
                        "format.json",
                        "provider.serialization"
                      ]
                    }
                  ]
                },
                {
                  "name": "Generator",
                  "type": "class",
                  "children": [
                    {
                      "name": "State",
                      "type": "class",
                      "children": [
                        {
                          "name": "generate",
                          "type": "function",
                          "location": "JSON::Ext::Generator::State#generate",
                          "static": false,
                          "labels": [
                            "format.json",
                            "provider.serialization"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "events": [
    {
      "id": 64085,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "SELECT \"uuid\" FROM \"scenarios\" WHERE (\"mapset_id\" = 100001)",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64086,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64085,
      "elapsed": 0.00117
    },
    {
      "id": 64087,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ApiKey",
      "method_id": "issue",
      "path": "app/models/api_key.rb",
      "lineno": 28,
      "static": true,
      "parameters": [
        {
          "name": "login",
          "class": "String",
          "object_id": 70221743797620,
          "value": "alice",
          "kind": "req"
        },
        {
          "name": "description",
          "class": "NilClass",
          "object_id": 8,
          "value": null,
          "kind": "key"
        },
        {
          "name": "encode",
          "class": "NilClass",
          "object_id": 8,
          "value": null,
          "kind": "key"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70222285939160,
        "value": "ApiKey"
      }
    },
    {
      "id": 64088,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "INSERT INTO \"api_keys\" (\"login\") VALUES ('alice') RETURNING *",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64089,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64088,
      "elapsed": 0.001506
    },
    {
      "id": 64090,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ApiKey",
      "method_id": "encode",
      "path": "app/models/api_key.rb",
      "lineno": 20,
      "static": true,
      "parameters": [
        {
          "name": "api_key",
          "class": "DAO::ApiKey",
          "object_id": 70221729655240,
          "value": "#<DAO::ApiKey:0x00007fbb8a80d390>",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70222285939160,
        "value": "ApiKey"
      }
    },
    {
      "id": 64091,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64090,
      "elapsed": 0.000018,
      "return_value": {
        "class": "String",
        "value": "YWxpY2U6OTY2NzY2NTctMTc2Ni00MTM0LWJkMmEtYjZiYzUyOTNkYmE0",
        "object_id": 70221734029800
      }
    },
    {
      "id": 64092,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64087,
      "elapsed": 0.005214,
      "return_value": {
        "class": "String",
        "value": "YWxpY2U6OTY2NzY2NTctMTc2Ni00MTM0LWJkMmEtYjZiYzUyOTNkYmE0",
        "object_id": 70221734029800
      }
    },
    {
      "id": 64093,
      "event": "call",
      "thread_id": 70223206228000,
      "http_server_request": {
        "request_method": "GET",
        "path_info": "/api/scenarios",
        "normalized_path_info": "/api/scenarios(.:format)",
        "authorization": "Bearer YWxpY2U6OTY2NzY2NTctMTc2Ni00MTM0LWJkMmEtYjZiYzUyOTNkYmE0"
      },
      "message": [
        {
          "name": "mapsets",
          "class": "Array",
          "value": "[\"100001\"]",
          "object_id": 70221734077660
        },
        {
          "name": "controller",
          "class": "String",
          "value": "api/scenarios",
          "object_id": 70222270836680
        },
        {
          "name": "action",
          "class": "String",
          "value": "index",
          "object_id": 70222270839940
        }
      ]
    },
    {
      "id": 64094,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ActionDispatch::Cookies::CookieJar",
      "method_id": "update",
      "path": "/Users/kgilpin/tmp/appland/vendor/bundle/ruby/2.6.0/gems/actionpack-5.2.4.2/lib/action_dispatch/middleware/cookies.rb",
      "lineno": 344,
      "static": false,
      "parameters": [
        {
          "name": "other_hash",
          "class": "Hash",
          "object_id": 70221734050560,
          "value": "{}",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "ActionDispatch::Cookies::CookieJar",
        "object_id": 70221734099540,
        "value": "#<ActionDispatch::Cookies::CookieJar:0x00007fbb8b0874a8>"
      }
    },
    {
      "id": 64095,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64094,
      "elapsed": 0.000007,
      "return_value": {
        "class": "ActionDispatch::Cookies::CookieJar",
        "value": "#<ActionDispatch::Cookies::CookieJar:0x00007fbb8b0874a8>",
        "object_id": 70221734099540
      }
    },
    {
      "id": 64096,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "AnonymousAccess",
      "method_id": "anonymous_access?",
      "path": "app/controllers/concerns/anonymous_access.rb",
      "lineno": 9,
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "API::ScenariosController",
        "object_id": 70221734067140,
        "value": "#<API::ScenariosController:0x00007fbb8b077788>"
      }
    },
    {
      "id": 64097,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64096,
      "elapsed": 0.000006
    },
    {
      "id": 64098,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ApiKey",
      "method_id": "authenticate",
      "path": "app/models/api_key.rb",
      "lineno": 52,
      "static": true,
      "parameters": [
        {
          "name": "api_key",
          "class": "String",
          "object_id": 70221734094180,
          "value": "YWxpY2U6OTY2NzY2NTctMTc2Ni00MTM0LWJkMmEtYjZiYzUyOTNkYmE0",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70222285939160,
        "value": "ApiKey"
      }
    },
    {
      "id": 64099,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ApiKey",
      "method_id": "decode",
      "path": "app/models/api_key.rb",
      "lineno": 24,
      "static": true,
      "parameters": [
        {
          "name": "api_key",
          "class": "String",
          "object_id": 70221734094180,
          "value": "YWxpY2U6OTY2NzY2NTctMTc2Ni00MTM0LWJkMmEtYjZiYzUyOTNkYmE0",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70222285939160,
        "value": "ApiKey"
      }
    },
    {
      "id": 64100,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64099,
      "elapsed": 0.00001,
      "return_value": {
        "class": "Array",
        "value": "[\"alice\", \"96676657-1766-4134-bd2a-b6bc5293dba4\"]",
        "object_id": 70221734107720
      }
    },
    {
      "id": 64101,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "SELECT * FROM \"api_keys\" WHERE (\"login\" = 'alice')",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64102,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64101,
      "elapsed": 0.001116
    },
    {
      "id": 64103,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "ApiKey",
      "method_id": "touch",
      "path": "app/models/api_key.rb",
      "lineno": 11,
      "static": true,
      "parameters": [
        {
          "name": "api_key",
          "class": "DAO::ApiKey",
          "object_id": 70221864318180,
          "value": "#<DAO::ApiKey:0x00007fbb9a8e69c8>",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70222285939160,
        "value": "ApiKey"
      }
    },
    {
      "id": 64104,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "UPDATE \"api_keys\" SET \"last_used\" = '2021-03-27 15:38:37.853399+0000' WHERE (\"id\" = 4)",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64105,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64104,
      "elapsed": 0.001045
    },
    {
      "id": 64106,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64103,
      "elapsed": 0.005432,
      "return_value": {
        "class": "DAO::ApiKey",
        "value": "#<DAO::ApiKey:0x00007fbb9a8e69c8>",
        "object_id": 70221864318180
      }
    },
    {
      "id": 64107,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "SELECT * FROM \"users\" WHERE (\"users\".\"login\" = 'alice') LIMIT 1",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64108,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64107,
      "elapsed": 0.001032
    },
    {
      "id": 64109,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64098,
      "elapsed": 0.016127,
      "return_value": {
        "class": "User::Show",
        "value": "#<User::Show:0x00007fbb8db5ba80>",
        "object_id": 70221756554560
      }
    },
    {
      "id": 64110,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "API::ScenariosController",
      "method_id": "index",
      "path": "app/controllers/api/scenarios_controller.rb",
      "lineno": 17,
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "API::ScenariosController",
        "object_id": 70221734067140,
        "value": "#<API::ScenariosController:0x00007fbb8b077788>"
      }
    },
    {
      "id": 64111,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "Scenario::SearchActions",
      "method_id": "search_api",
      "path": "app/models/scenario.rb",
      "lineno": 66,
      "static": false,
      "parameters": [
        {
          "name": "params",
          "class": "ActionController::Parameters",
          "object_id": 70221756552620,
          "value": "{\"mapsets\"=>[\"100001\"], \"controller\"=>\"api/scenarios\", \"action\"=>\"index\"}",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Scenario::Search",
        "object_id": 70221756551780,
        "value": "#<Scenario::Search:0x00007fbb8db5a4c8>"
      }
    },
    {
      "id": 64112,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "Search",
      "method_id": "filter",
      "path": "app/models/search.rb",
      "lineno": 33,
      "static": false,
      "parameters": [
        {
          "name": "dataset",
          "class": "Class",
          "object_id": 70223077321880,
          "value": "DAO::Scenario",
          "kind": "req"
        },
        {
          "name": "table_name",
          "class": "NilClass",
          "object_id": 8,
          "value": null,
          "kind": "key"
        }
      ],
      "receiver": {
        "class": "Scenario::Search",
        "object_id": 70221756551780,
        "value": "#<Scenario::Search:0x00007fbb8db5a4c8>"
      }
    },
    {
      "id": 64113,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "User::Show",
      "method_id": "admin?",
      "path": "app/models/user.rb",
      "lineno": 106,
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "User::Show",
        "object_id": 70221756554560,
        "value": "#<User::Show:0x00007fbb8db5ba80>"
      }
    },
    {
      "id": 64114,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64113,
      "elapsed": 0.000007
    },
    {
      "id": 64115,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "DAO::PublicResource",
      "method_id": "coerce",
      "path": "app/models/dao/public_resource.rb",
      "lineno": 18,
      "static": true,
      "parameters": [
        {
          "name": "dataset",
          "class": "Class",
          "object_id": 70223077321880,
          "value": "DAO::Scenario",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Module",
        "object_id": 70222284109120,
        "value": "DAO::PublicResource"
      }
    },
    {
      "id": 64116,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64115,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Class",
        "value": "DAO::Scenario",
        "object_id": 70223077321880
      }
    },
    {
      "id": 64117,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "DAO::PublicResource",
      "method_id": "scope",
      "path": "app/models/dao/public_resource.rb",
      "lineno": 26,
      "static": true,
      "parameters": [
        {
          "name": "user",
          "class": "User::Show",
          "object_id": 70221756554560,
          "value": "#<User::Show:0x00007fbb8db5ba80>",
          "kind": "req"
        },
        {
          "name": "scope",
          "class": "Integer",
          "object_id": 3,
          "value": "1",
          "kind": "key"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 70223077321880,
        "value": "DAO::Scenario"
      }
    },
    {
      "id": 64118,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "SELECT * FROM \"users\" WHERE \"id\" = 1000001",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64119,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64118,
      "elapsed": 0.001055
    },
    {
      "id": 64120,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "DAO::SequelUtil",
      "method_id": "build_where_clause",
      "path": "app/models/dao/sequel_util.rb",
      "lineno": 6,
      "static": true,
      "parameters": [
        {
          "name": "dataset",
          "class": "Sequel::Postgres::Dataset",
          "object_id": 70222284481180,
          "value": "#<Sequel::Postgres::Dataset:0x00007fbbcca4c538>",
          "kind": "req"
        },
        {
          "name": "clauses",
          "class": "Array",
          "object_id": 70222950008880,
          "value": "[{:org=>#<Sequel::Postgres::Dataset: \"SELECT \\\"orgs\\\".* FROM \\\"orgs\\\" INNER JOIN \\\"users_orgs\\\" ON (",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Module",
        "object_id": 70222406546920,
        "value": "DAO::SequelUtil"
      }
    },
    {
      "id": 64121,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64120,
      "elapsed": 0.000024,
      "return_value": {
        "class": "Sequel::Postgres::Dataset",
        "value": "#<Sequel::Postgres::Dataset:0x00007fbc1bfbba60>",
        "object_id": 70222950030640
      }
    },
    {
      "id": 64122,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64117,
      "elapsed": 0.00516,
      "return_value": {
        "class": "Sequel::Postgres::Dataset",
        "value": "#<Sequel::Postgres::Dataset:0x00007fbc1bfbb218>",
        "object_id": 70222950029580
      }
    },
    {
      "id": 64123,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64112,
      "elapsed": 0.005424,
      "return_value": {
        "class": "Sequel::Postgres::Dataset",
        "value": "#<Sequel::Postgres::Dataset:0x00007fbc1bfbb218>",
        "object_id": 70222950029580
      }
    },
    {
      "id": 64124,
      "event": "call",
      "thread_id": 70223206228000,
      "sql_query": {
        "sql": "SELECT subquery.*, \"metadata\" FROM \"scenarios\" INNER JOIN (WITH \"matching_scenarios\" AS (SELECT \"id\" AS \"scenario_id\" FROM \"scenarios\" WHERE (((\"scenarios\".\"org_id\" IN (SELECT \"orgs\".\"id\" FROM \"orgs\" INNER JOIN \"users_orgs\" ON (\"users_orgs\".\"org_id\" = \"orgs\".\"id\") WHERE ((\"users_orgs\".\"user_id\" = 1000001) AND (\"orgs\".\"id\" IS NOT NULL)))) OR (\"scenarios\".\"mapset_id\" IN (SELECT \"mapsets\".\"id\" FROM \"mapsets\" WHERE ((\"mapsets\".\"app_id\" IN (SELECT \"apps\".\"id\" FROM \"apps\" WHERE ((\"apps\".\"org_id\" IN (SELECT \"orgs\".\"id\" FROM \"orgs\" INNER JOIN \"users_orgs\" ON (\"users_orgs\".\"org_id\" = \"orgs\".\"id\") WHERE ((\"users_orgs\".\"user_id\" = 1000001) AND (\"orgs\".\"id\" IS NOT NULL)))) AND (\"apps\".\"id\" IS NOT NULL)))) AND (\"mapsets\".\"id\" IS NOT NULL))))) AND (\"mapset_id\" IN ('100001')))) SELECT \"mapset_id\", \"uuid\", NULL AS \"labels\" FROM \"matching_scenarios\" INNER JOIN \"scenarios\" ON (\"scenarios\".\"id\" = \"matching_scenarios\".\"scenario_id\") GROUP BY \"mapset_id\", \"uuid\", \"labels\") AS \"subquery\" ON (\"scenarios\".\"uuid\" = \"subquery\".\"uuid\")",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 64125,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64124,
      "elapsed": 0.002112
    },
    {
      "id": 64126,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744747280,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4d6620>"
      }
    },
    {
      "id": 64127,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64126,
      "elapsed": 0.000009,
      "return_value": {
        "class": "Hash",
        "value": "{\"name\"=>\"A single call is recorded without returning\"}",
        "object_id": 70221744746240
      }
    },
    {
      "id": 64128,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744745600,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4d5900>"
      }
    },
    {
      "id": 64129,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64128,
      "elapsed": 0.000015,
      "return_value": {
        "class": "Hash",
        "value": "{\"git\"=>{\"branch\"=>\"test\", \"commit\"=>\"4c7a6de016ab523f6606de1901ee785ac9525b96\", \"repository\"=>\"git@",
        "object_id": 70221744744620
      }
    },
    {
      "id": 64130,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744743160,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4d45f0>"
      }
    },
    {
      "id": 64131,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64130,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Hash",
        "value": "{\"labels\"=>[\"label1\", \"positive\"]}",
        "object_id": 70221744766660
      }
    },
    {
      "id": 64132,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744765940,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4df7e8>"
      }
    },
    {
      "id": 64133,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64132,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Hash",
        "value": "{\"labels\"=>[\"label2\", \"positive\"]}",
        "object_id": 70221744764920
      }
    },
    {
      "id": 64134,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744764200,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4dea50>"
      }
    },
    {
      "id": 64135,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64134,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Hash",
        "value": "{\"labels\"=>[\"label1\", \"label2\", \"negative\"]}",
        "object_id": 70221744763220
      }
    },
    {
      "id": 64136,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744762460,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4ddcb8>"
      }
    },
    {
      "id": 64137,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64136,
      "elapsed": 0.000004,
      "return_value": {
        "class": "Hash",
        "value": "{\"name\"=>\"A multi threaded example is run\"}",
        "object_id": 70221744761480
      }
    },
    {
      "id": 64138,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744760840,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4dd010>"
      }
    },
    {
      "id": 64139,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64138,
      "elapsed": 0.000007,
      "return_value": {
        "class": "Hash",
        "value": "{\"name\"=>\"Session is destroyed when a user clicks 'log out'\", \"labels\"=>[\"label3\", \"label4\"], \"featu",
        "object_id": 70221744759860
      }
    },
    {
      "id": 64140,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744758980,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4dc188>"
      }
    },
    {
      "id": 64141,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64140,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Hash",
        "value": "{\"name\"=>\"Various events\"}",
        "object_id": 70221744782500
      }
    },
    {
      "id": 64142,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744781860,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c4e7448>"
      }
    },
    {
      "id": 64143,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64142,
      "elapsed": 0.000005,
      "return_value": {
        "class": "Hash",
        "value": "{\"name\"=>\"Examplar methods from various languages\"}",
        "object_id": 70221744780800
      }
    },
    {
      "id": 64144,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64111,
      "elapsed": 0.012271,
      "return_value": {
        "class": "Array",
        "value": "[#<struct Scenario::ApiItem mapset_id=100001, scenario_uuid=\"038afeda-c504-40e7-808b-e5c0cd79477e\", ",
        "object_id": 70222950025720
      }
    },
    {
      "id": 64145,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Generator::State",
      "method_id": "generate",
      "path": "JSON::Ext::Generator::State#generate",
      "static": false,
      "parameters": [
        {
          "name": "arg",
          "class": "Array",
          "object_id": 70221744791900,
          "value": "[{\"mapset_id\"=>100001, \"scenario_uuid\"=>\"038afeda-c504-40e7-808b-e5c0cd79477e\", \"code_objects\"=>[], ",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "JSON::Ext::Generator::State",
        "object_id": 70221744811160,
        "value": "#<JSON::Ext::Generator::State:0x00007fbb8c4f5930>"
      }
    },
    {
      "id": 64146,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64145,
      "elapsed": 0.000198,
      "return_value": {
        "class": "String",
        "value": "[{\"mapset_id\":100001,\"scenario_uuid\":\"038afeda-c504-40e7-808b-e5c0cd79477e\",\"code_objects\":[],\"metad",
        "object_id": 70221744844060
      }
    },
    {
      "id": 64147,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64110,
      "elapsed": 0.01309,
      "return_value": {
        "class": "String",
        "value": "[{\"mapset_id\":100001,\"scenario_uuid\":\"038afeda-c504-40e7-808b-e5c0cd79477e\",\"code_objects\":[],\"metad",
        "object_id": 70221744844060
      }
    },
    {
      "id": 64148,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64093,
      "elapsed": 0.030223,
      "http_server_response": {
        "status": 200,
        "mime_type": "application/json; charset=utf-8"
      }
    },
    {
      "id": 64149,
      "event": "call",
      "thread_id": 70223206228000,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "parameters": [],
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 70221744861720,
        "value": "#<JSON::Ext::Parser:0x00007fbb8c50e430>"
      }
    },
    {
      "id": 64150,
      "event": "return",
      "thread_id": 70223206228000,
      "parent_id": 64149,
      "elapsed": 0.000043,
      "return_value": {
        "class": "Array",
        "value": "[{\"mapset_id\"=>100001, \"scenario_uuid\"=>\"038afeda-c504-40e7-808b-e5c0cd79477e\", \"code_objects\"=>[], ",
        "object_id": 70221744860600
      }
    }
  ]
}